========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = -4962768465676381896, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 2 milliseconds with (i=8830, tSkips=1681, lifted=7149, updated=1351, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=3145, tSkips=354, lifted=2791, updated=421, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 19 milliseconds with (i=201821, tSkips=31875, lifted=169946, updated=44279, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25550, tSkips=3127, lifted=22423, updated=7286, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 160 milliseconds with (i=4067362, tSkips=609495, lifted=3457867, updated=1188277, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 9 milliseconds with (i=320660, tSkips=27726, lifted=292934, updated=183646, updated/lifted=0.63).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4226 milliseconds with (i=132371968, tSkips=19925721, lifted=112446247, updated=43428238, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 172 milliseconds with (i=8374127, tSkips=318525, lifted=8055602, updated=6944221, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6197 milliseconds with (i=372825230, tSkips=3147804, lifted=369677426, updated=359491900, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 4437113781045784766, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=15441, tSkips=2553, lifted=12888, updated=2097, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2759, tSkips=297, lifted=2462, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=164813, tSkips=25392, lifted=139421, updated=44279, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=24819, tSkips=3008, lifted=21811, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 122 milliseconds with (i=4064532, tSkips=606361, lifted=3458171, updated=1188411, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=313013, tSkips=26178, lifted=286835, updated=183529, updated/lifted=0.64).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 3553 milliseconds with (i=99316093, tSkips=14987293, lifted=84328800, updated=32483788, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 163 milliseconds with (i=8383722, tSkips=320652, lifted=8063070, updated=6944575, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6119 milliseconds with (i=373344543, tSkips=3270600, lifted=370073943, updated=359491895, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = -6688467811848818630, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=13504, tSkips=2269, lifted=11235, updated=2101, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2877, tSkips=314, lifted=2563, updated=421, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=164932, tSkips=25300, lifted=139632, updated=44267, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=24997, tSkips=3035, lifted=21962, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 152 milliseconds with (i=4794449, tSkips=753912, lifted=4040537, updated=1188434, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=314602, tSkips=26474, lifted=288128, updated=183640, updated/lifted=0.64).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 3856 milliseconds with (i=110312942, tSkips=15030899, lifted=95282043, updated=43427911, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 165 milliseconds with (i=8345772, tSkips=312135, lifted=8033637, updated=6944746, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5997 milliseconds with (i=373274687, tSkips=3254073, lifted=370020614, updated=359492943, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = -8292973307042192125, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=13401, tSkips=2205, lifted=11196, updated=2101, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=3144, tSkips=348, lifted=2796, updated=421, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 4 milliseconds with (i=200981, tSkips=31247, lifted=169734, updated=44298, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=26011, tSkips=3213, lifted=22798, updated=7286, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 126 milliseconds with (i=4059121, tSkips=602416, lifted=3456705, updated=1188188, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=309235, tSkips=25391, lifted=283844, updated=183620, updated/lifted=0.65).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 3536 milliseconds with (i=102304962, tSkips=15002914, lifted=87302048, updated=35464162, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 176 milliseconds with (i=8471354, tSkips=340232, lifted=8131122, updated=6944610, updated/lifted=0.85).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6031 milliseconds with (i=373320118, tSkips=3264732, lifted=370055386, updated=359492878, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = -7423979211207825555, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=13621, tSkips=2341, lifted=11280, updated=2101, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2955, tSkips=326, lifted=2629, updated=421, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=163835, tSkips=24169, lifted=139666, updated=44271, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25434, tSkips=3121, lifted=22313, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 123 milliseconds with (i=4063126, tSkips=605085, lifted=3458041, updated=1188431, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=314614, tSkips=26500, lifted=288114, updated=183646, updated/lifted=0.64).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 5790 milliseconds with (i=143392482, tSkips=22352466, lifted=121040016, updated=43428742, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 153 milliseconds with (i=8442140, tSkips=333887, lifted=8108253, updated=6943906, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6317 milliseconds with (i=372865988, tSkips=3157110, lifted=369708878, updated=359493053, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 6146794652083548235, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=13651, tSkips=2415, lifted=11236, updated=2100, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=3623, tSkips=416, lifted=3207, updated=421, updated/lifted=0.13).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=163922, tSkips=24358, lifted=139564, updated=44258, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25337, tSkips=3097, lifted=22240, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 109 milliseconds with (i=4063540, tSkips=604102, lifted=3459438, updated=1188393, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=314777, tSkips=26546, lifted=288231, updated=183633, updated/lifted=0.64).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 5660 milliseconds with (i=143371674, tSkips=22337770, lifted=121033904, updated=43427891, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 168 milliseconds with (i=8421135, tSkips=328992, lifted=8092143, updated=6944755, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6069 milliseconds with (i=373063706, tSkips=3203843, lifted=369859863, updated=359493449, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 7105486291024734541, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11506, tSkips=1972, lifted=9534, updated=2097, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=3499, tSkips=399, lifted=3100, updated=421, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=201561, tSkips=31455, lifted=170106, updated=44275, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=26887, tSkips=3366, lifted=23521, updated=7286, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 84 milliseconds with (i=3127581, tSkips=417763, lifted=2709818, updated=1187649, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=321309, tSkips=27850, lifted=293459, updated=183615, updated/lifted=0.63).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 3534 milliseconds with (i=110268238, tSkips=14998297, lifted=95269941, updated=43427973, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 164 milliseconds with (i=8389693, tSkips=321939, lifted=8067754, updated=6944858, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6139 milliseconds with (i=373326303, tSkips=3266009, lifted=370060294, updated=359493035, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = -279624296851435688, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=13538, tSkips=2292, lifted=11246, updated=2105, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=3509, tSkips=402, lifted=3107, updated=421, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 4 milliseconds with (i=200885, tSkips=30920, lifted=169965, updated=44282, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=26081, tSkips=3239, lifted=22842, updated=7286, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 112 milliseconds with (i=3749917, tSkips=540292, lifted=3209625, updated=1188383, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=312015, tSkips=25946, lifted=286069, updated=183646, updated/lifted=0.64).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4824 milliseconds with (i=132335519, tSkips=19893467, lifted=112442052, updated=43429024, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 161 milliseconds with (i=8375491, tSkips=318759, lifted=8056732, updated=6944806, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5808 milliseconds with (i=372770841, tSkips=3134617, lifted=369636224, updated=359493389, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = -2228689144322150137, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=13622, tSkips=2319, lifted=11303, updated=2105, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2688, tSkips=290, lifted=2398, updated=421, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=165779, tSkips=25787, lifted=139992, updated=44255, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=23168, tSkips=2722, lifted=20446, updated=7286, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 87 milliseconds with (i=3133976, tSkips=419590, lifted=2714386, updated=1188299, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=321759, tSkips=28025, lifted=293734, updated=183186, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 5400 milliseconds with (i=132332347, tSkips=19882374, lifted=112449973, updated=43428669, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 172 milliseconds with (i=8397387, tSkips=323706, lifted=8073681, updated=6944737, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5959 milliseconds with (i=373065262, tSkips=3204049, lifted=369861213, updated=359493958, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = -1083761183081836303, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11557, tSkips=2027, lifted=9530, updated=2099, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=3030, tSkips=332, lifted=2698, updated=421, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 4 milliseconds with (i=201672, tSkips=31748, lifted=169924, updated=44277, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=23873, tSkips=2850, lifted=21023, updated=7286, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 122 milliseconds with (i=4070933, tSkips=610281, lifted=3460652, updated=1188437, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=317456, tSkips=27054, lifted=290402, updated=183646, updated/lifted=0.63).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4140 milliseconds with (i=110264716, tSkips=15018342, lifted=95246374, updated=43427746, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 183 milliseconds with (i=8407870, tSkips=326016, lifted=8081854, updated=6944741, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6010 milliseconds with (i=373032048, tSkips=3196457, lifted=369835591, updated=359493441, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = -4962768465676381896, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=9487, tSkips=0, lifted=9487, updated=923, updated/lifted=0.1).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10072, tSkips=4811, lifted=5261, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=92429, tSkips=0, lifted=92429, updated=6427, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=119232, tSkips=54619, lifted=64613, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 87 milliseconds with (i=580024, tSkips=0, lifted=580024, updated=32222, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 36 milliseconds with (i=861172, tSkips=391817, lifted=469355, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 473 milliseconds with (i=2718707, tSkips=0, lifted=2718707, updated=127880, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 478 milliseconds with (i=4262676, tSkips=1874751, lifted=2387925, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 4437113781045784766, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=9736, tSkips=0, lifted=9736, updated=962, updated/lifted=0.1).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10207, tSkips=4824, lifted=5383, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=95812, tSkips=0, lifted=95812, updated=6377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=119984, tSkips=54759, lifted=65225, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 85 milliseconds with (i=566673, tSkips=0, lifted=566673, updated=32075, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 51 milliseconds with (i=858681, tSkips=386566, lifted=472115, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 456 milliseconds with (i=2708943, tSkips=0, lifted=2708943, updated=128295, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 384 milliseconds with (i=4221565, tSkips=1809515, lifted=2412050, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = -6688467811848818630, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10736, tSkips=0, lifted=10736, updated=970, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10188, tSkips=5011, lifted=5177, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=96268, tSkips=0, lifted=96268, updated=6348, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=119718, tSkips=54855, lifted=64863, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 49 milliseconds with (i=584258, tSkips=0, lifted=584258, updated=31790, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 33 milliseconds with (i=875416, tSkips=398641, lifted=476775, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 420 milliseconds with (i=2716550, tSkips=0, lifted=2716550, updated=129507, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 431 milliseconds with (i=4173761, tSkips=1828224, lifted=2345537, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = -8292973307042192125, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11586, tSkips=0, lifted=11586, updated=1013, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10112, tSkips=4794, lifted=5318, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=93468, tSkips=0, lifted=93468, updated=6394, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=120580, tSkips=55224, lifted=65356, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 60 milliseconds with (i=582753, tSkips=0, lifted=582753, updated=31955, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 33 milliseconds with (i=819528, tSkips=360884, lifted=458644, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 460 milliseconds with (i=2699632, tSkips=0, lifted=2699632, updated=129536, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 388 milliseconds with (i=4287500, tSkips=1853511, lifted=2433989, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = -7423979211207825555, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10677, tSkips=0, lifted=10677, updated=974, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=9830, tSkips=4924, lifted=4906, updated=377, updated/lifted=0.08).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92054, tSkips=0, lifted=92054, updated=6397, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=122490, tSkips=56559, lifted=65931, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 49 milliseconds with (i=568505, tSkips=0, lifted=568505, updated=31907, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 33 milliseconds with (i=877057, tSkips=391517, lifted=485540, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 413 milliseconds with (i=2704518, tSkips=0, lifted=2704518, updated=131008, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 417 milliseconds with (i=4121554, tSkips=1773094, lifted=2348460, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 6146794652083548235, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=9830, tSkips=0, lifted=9830, updated=958, updated/lifted=0.1).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11075, tSkips=5405, lifted=5670, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=96351, tSkips=0, lifted=96351, updated=6450, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=119988, tSkips=54709, lifted=65279, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 63 milliseconds with (i=581426, tSkips=0, lifted=581426, updated=32001, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 36 milliseconds with (i=831449, tSkips=374143, lifted=457306, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 465 milliseconds with (i=2659328, tSkips=0, lifted=2659328, updated=128128, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 440 milliseconds with (i=4198218, tSkips=1798551, lifted=2399667, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 7105486291024734541, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11414, tSkips=0, lifted=11414, updated=1005, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11271, tSkips=5510, lifted=5761, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92017, tSkips=0, lifted=92017, updated=6404, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=114377, tSkips=52680, lifted=61697, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 71 milliseconds with (i=583139, tSkips=0, lifted=583139, updated=31942, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 37 milliseconds with (i=849538, tSkips=376928, lifted=472610, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 452 milliseconds with (i=2734283, tSkips=0, lifted=2734283, updated=128962, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 402 milliseconds with (i=4211442, tSkips=1829902, lifted=2381540, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = -279624296851435688, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10440, tSkips=0, lifted=10440, updated=985, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10443, tSkips=5020, lifted=5423, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=94374, tSkips=0, lifted=94374, updated=6408, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=113128, tSkips=50470, lifted=62658, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 84 milliseconds with (i=584751, tSkips=0, lifted=584751, updated=32263, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 41 milliseconds with (i=847464, tSkips=377500, lifted=469964, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 479 milliseconds with (i=2666874, tSkips=0, lifted=2666874, updated=128980, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 424 milliseconds with (i=4185070, tSkips=1814358, lifted=2370712, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = -2228689144322150137, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10794, tSkips=0, lifted=10794, updated=983, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10376, tSkips=4947, lifted=5429, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=97730, tSkips=0, lifted=97730, updated=6500, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=127354, tSkips=58923, lifted=68431, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 78 milliseconds with (i=580243, tSkips=0, lifted=580243, updated=31500, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 38 milliseconds with (i=827775, tSkips=370064, lifted=457711, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 438 milliseconds with (i=2628946, tSkips=0, lifted=2628946, updated=128129, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 386 milliseconds with (i=4164221, tSkips=1786033, lifted=2378188, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = -1083761183081836303, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11123, tSkips=0, lifted=11123, updated=1022, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=9338, tSkips=4591, lifted=4747, updated=377, updated/lifted=0.08).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=97363, tSkips=0, lifted=97363, updated=6484, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=114520, tSkips=52757, lifted=61763, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 36 milliseconds with (i=561832, tSkips=0, lifted=561832, updated=31666, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 32 milliseconds with (i=828512, tSkips=374041, lifted=454471, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 416 milliseconds with (i=2657732, tSkips=0, lifted=2657732, updated=130086, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 364 milliseconds with (i=4073334, tSkips=1755791, lifted=2317543, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = -4962768465676381896, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=129, tSkips=12, lifted=117, updated=47, updated/lifted=0.4).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=177, tSkips=43, lifted=134, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=103, tSkips=41, lifted=62, updated=14, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=110, tSkips=45, lifted=65, updated=46, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=464, tSkips=16, lifted=448, updated=163, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=802, tSkips=204, lifted=598, updated=224, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=362, tSkips=117, lifted=245, updated=34, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=484, tSkips=201, lifted=283, updated=166, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2066, tSkips=23, lifted=2043, updated=583, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3308, tSkips=877, lifted=2431, updated=796, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=992, tSkips=292, lifted=700, updated=94, updated/lifted=0.13).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1440, tSkips=589, lifted=851, updated=545, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=6882, tSkips=22, lifted=6860, updated=1924, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=11753, tSkips=2899, lifted=8854, updated=2687, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3635, tSkips=865, lifted=2770, updated=292, updated/lifted=0.11).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5300, tSkips=1970, lifted=3330, updated=1945, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=27644, tSkips=29, lifted=27615, updated=6592, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=45427, tSkips=14866, lifted=30561, updated=9145, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=12320, tSkips=3375, lifted=8945, updated=946, updated/lifted=0.11).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=17904, tSkips=8529, lifted=9375, updated=5983, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=101577, tSkips=34, lifted=101543, updated=22155, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=174042, tSkips=58343, lifted=115699, updated=30792, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=41850, tSkips=11221, lifted=30629, updated=3106, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61413, tSkips=25263, lifted=36150, updated=20806, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 22 milliseconds with (i=400718, tSkips=43, lifted=400675, updated=74607, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 31 milliseconds with (i=679245, tSkips=241648, lifted=437597, updated=102728, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 8 milliseconds with (i=131635, tSkips=38226, lifted=93409, updated=10240, updated/lifted=0.11).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 8 milliseconds with (i=210636, tSkips=82359, lifted=128277, updated=71148, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 187 milliseconds with (i=1320640, tSkips=41, lifted=1320599, updated=249098, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 248 milliseconds with (i=2459393, tSkips=895346, lifted=1564047, updated=342658, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 79 milliseconds with (i=523758, tSkips=127514, lifted=396244, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 54 milliseconds with (i=728221, tSkips=274464, lifted=453757, updated=237860, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 838 milliseconds with (i=4899035, tSkips=48, lifted=4898987, updated=829729, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 1025 milliseconds with (i=8964023, tSkips=3458083, lifted=5505940, updated=1138607, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 221 milliseconds with (i=1483687, tSkips=421011, lifted=1062676, updated=111622, updated/lifted=0.11).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 207 milliseconds with (i=2353663, tSkips=975804, lifted=1377859, updated=763492, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4942 milliseconds with (i=17622493, tSkips=53, lifted=17622440, updated=2761168, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 4346 milliseconds with (i=31978846, tSkips=12660854, lifted=19317992, updated=3782013, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 977 milliseconds with (i=5674783, tSkips=1822138, lifted=3852645, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 833 milliseconds with (i=8777010, tSkips=3778102, lifted=4998908, updated=2565694, updated/lifted=0.51).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 4437113781045784766, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=93, tSkips=7, lifted=86, updated=38, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=236, tSkips=54, lifted=182, updated=62, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=105, tSkips=43, lifted=62, updated=14, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=132, tSkips=49, lifted=83, updated=50, updated/lifted=0.6).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=485, tSkips=14, lifted=471, updated=168, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=798, tSkips=163, lifted=635, updated=229, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=314, tSkips=98, lifted=216, updated=34, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=423, tSkips=186, lifted=237, updated=156, updated/lifted=0.66).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1772, tSkips=18, lifted=1754, updated=553, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3129, tSkips=897, lifted=2232, updated=799, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1225, tSkips=349, lifted=876, updated=94, updated/lifted=0.11).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1344, tSkips=625, lifted=719, updated=499, updated/lifted=0.69).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7085, tSkips=23, lifted=7062, updated=1925, updated/lifted=0.27).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=11610, tSkips=3046, lifted=8564, updated=2732, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=4069, tSkips=1007, lifted=3062, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5303, tSkips=2084, lifted=3219, updated=1916, updated/lifted=0.6).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=27332, tSkips=28, lifted=27304, updated=6563, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=41619, tSkips=12792, lifted=28827, updated=9168, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=15538, tSkips=4275, lifted=11263, updated=946, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=17659, tSkips=7421, lifted=10238, updated=6157, updated/lifted=0.6).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=99652, tSkips=34, lifted=99618, updated=22092, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 8 milliseconds with (i=175339, tSkips=55480, lifted=119859, updated=30813, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47004, tSkips=11149, lifted=35855, updated=3106, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 3 milliseconds with (i=63978, tSkips=24745, lifted=39233, updated=21618, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 34 milliseconds with (i=394705, tSkips=40, lifted=394665, updated=74444, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 44 milliseconds with (i=662343, tSkips=231680, lifted=430663, updated=102773, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 15 milliseconds with (i=169623, tSkips=43590, lifted=126033, updated=10240, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 11 milliseconds with (i=219272, tSkips=98635, lifted=120637, updated=68772, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 212 milliseconds with (i=1403278, tSkips=45, lifted=1403233, updated=248992, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 238 milliseconds with (i=2382531, tSkips=893110, lifted=1489421, updated=342063, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 52 milliseconds with (i=542439, tSkips=141190, lifted=401249, updated=33802, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 51 milliseconds with (i=714743, tSkips=289475, lifted=425268, updated=234709, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 855 milliseconds with (i=5181582, tSkips=52, lifted=5181530, updated=829955, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 984 milliseconds with (i=8938301, tSkips=3320798, lifted=5617503, updated=1138951, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 251 milliseconds with (i=1659434, tSkips=487821, lifted=1171613, updated=111622, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 204 milliseconds with (i=2421783, tSkips=948035, lifted=1473748, updated=785906, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2736 milliseconds with (i=18097796, tSkips=55, lifted=18097741, updated=2762080, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3817 milliseconds with (i=30471991, tSkips=11347207, lifted=19124784, updated=3781597, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 1129 milliseconds with (i=5752702, tSkips=1484553, lifted=4268149, updated=368644, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 811 milliseconds with (i=8102349, tSkips=3161508, lifted=4940841, updated=2587023, updated/lifted=0.52).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = -6688467811848818630, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=99, tSkips=10, lifted=89, updated=36, updated/lifted=0.4).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=195, tSkips=43, lifted=152, updated=56, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=102, tSkips=44, lifted=58, updated=14, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=137, tSkips=52, lifted=85, updated=51, updated/lifted=0.6).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=466, tSkips=16, lifted=450, updated=153, updated/lifted=0.34).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=801, tSkips=181, lifted=620, updated=236, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=306, tSkips=97, lifted=209, updated=34, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=445, tSkips=190, lifted=255, updated=163, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1715, tSkips=17, lifted=1698, updated=541, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3285, tSkips=825, lifted=2460, updated=793, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1030, tSkips=285, lifted=745, updated=94, updated/lifted=0.13).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1528, tSkips=571, lifted=957, updated=567, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=6737, tSkips=23, lifted=6714, updated=1905, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13238, tSkips=3811, lifted=9427, updated=2732, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3954, tSkips=959, lifted=2995, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5580, tSkips=2227, lifted=3353, updated=1926, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=26792, tSkips=27, lifted=26765, updated=6553, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=47825, tSkips=15146, lifted=32679, updated=9226, updated/lifted=0.28).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13674, tSkips=3718, lifted=9956, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19494, tSkips=7830, lifted=11664, updated=6426, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=98998, tSkips=32, lifted=98966, updated=22263, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=173229, tSkips=55996, lifted=117233, updated=30642, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=45099, tSkips=12899, lifted=32200, updated=3106, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=63222, tSkips=23907, lifted=39315, updated=21759, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 22 milliseconds with (i=395829, tSkips=41, lifted=395788, updated=74524, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 33 milliseconds with (i=641233, tSkips=226365, lifted=414868, updated=102564, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 11 milliseconds with (i=145174, tSkips=35715, lifted=109459, updated=10240, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=226481, tSkips=93207, lifted=133274, updated=70816, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 184 milliseconds with (i=1341109, tSkips=41, lifted=1341068, updated=248974, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 276 milliseconds with (i=2340245, tSkips=810710, lifted=1529535, updated=342110, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 66 milliseconds with (i=534604, tSkips=135899, lifted=398705, updated=33802, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 46 milliseconds with (i=717303, tSkips=287955, lifted=429348, updated=233176, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 794 milliseconds with (i=4993839, tSkips=49, lifted=4993790, updated=829894, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 1031 milliseconds with (i=9048470, tSkips=3429710, lifted=5618760, updated=1138428, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 266 milliseconds with (i=1784276, tSkips=457005, lifted=1327271, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 173 milliseconds with (i=2342620, tSkips=886426, lifted=1456194, updated=783835, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2582 milliseconds with (i=17687128, tSkips=53, lifted=17687075, updated=2762014, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3878 milliseconds with (i=32148687, tSkips=12166371, lifted=19982316, updated=3781609, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 858 milliseconds with (i=5215768, tSkips=1495499, lifted=3720269, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 675 milliseconds with (i=8001084, tSkips=3193007, lifted=4808077, updated=2566113, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = -8292973307042192125, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=92, tSkips=7, lifted=85, updated=35, updated/lifted=0.41).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=174, tSkips=42, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=76, tSkips=32, lifted=44, updated=14, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=118, tSkips=52, lifted=66, updated=45, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=447, tSkips=15, lifted=432, updated=146, updated/lifted=0.34).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=741, tSkips=202, lifted=539, updated=219, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=285, tSkips=114, lifted=171, updated=34, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=441, tSkips=203, lifted=238, updated=159, updated/lifted=0.67).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1811, tSkips=19, lifted=1792, updated=570, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2840, tSkips=646, lifted=2194, updated=781, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1110, tSkips=326, lifted=784, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1590, tSkips=639, lifted=951, updated=564, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=6805, tSkips=22, lifted=6783, updated=1944, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=12799, tSkips=4106, lifted=8693, updated=2724, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3211, tSkips=1007, lifted=2204, updated=292, updated/lifted=0.13).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5436, tSkips=2529, lifted=2907, updated=1815, updated/lifted=0.62).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=25890, tSkips=28, lifted=25862, updated=6540, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=43631, tSkips=13070, lifted=30561, updated=9192, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13247, tSkips=3218, lifted=10029, updated=946, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19178, tSkips=8774, lifted=10404, updated=6230, updated/lifted=0.6).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=104855, tSkips=36, lifted=104819, updated=22204, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=175582, tSkips=62823, lifted=112759, updated=30734, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=45463, tSkips=11407, lifted=34056, updated=3106, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=60696, tSkips=28398, lifted=32298, updated=19989, updated/lifted=0.62).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 20 milliseconds with (i=379692, tSkips=39, lifted=379653, updated=74476, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 29 milliseconds with (i=670013, tSkips=228634, lifted=441379, updated=102828, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 8 milliseconds with (i=146319, tSkips=42714, lifted=103605, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 9 milliseconds with (i=231119, tSkips=98046, lifted=133073, updated=70779, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 186 milliseconds with (i=1393054, tSkips=45, lifted=1393009, updated=248606, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 165 milliseconds with (i=2477583, tSkips=917294, lifted=1560289, updated=342271, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 52 milliseconds with (i=504185, tSkips=138667, lifted=365518, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 47 milliseconds with (i=725182, tSkips=299480, lifted=425702, updated=233463, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 794 milliseconds with (i=4888164, tSkips=48, lifted=4888116, updated=829551, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 1017 milliseconds with (i=9206290, tSkips=3550714, lifted=5655576, updated=1138248, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 199 milliseconds with (i=1841774, tSkips=491863, lifted=1349911, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 129 milliseconds with (i=2400997, tSkips=884601, lifted=1516396, updated=796153, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2934 milliseconds with (i=18413962, tSkips=55, lifted=18413907, updated=2760983, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3937 milliseconds with (i=31167940, tSkips=11572328, lifted=19595612, updated=3783095, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 814 milliseconds with (i=5805738, tSkips=1344359, lifted=4461379, updated=368644, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 733 milliseconds with (i=8148357, tSkips=2809888, lifted=5338469, updated=2674890, updated/lifted=0.5).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = -7423979211207825555, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=114, tSkips=10, lifted=104, updated=40, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=196, tSkips=47, lifted=149, updated=56, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=42, lifted=50, updated=14, updated/lifted=0.28).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=136, tSkips=59, lifted=77, updated=48, updated/lifted=0.62).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=431, tSkips=13, lifted=418, updated=142, updated/lifted=0.34).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=762, tSkips=156, lifted=606, updated=222, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=349, tSkips=117, lifted=232, updated=34, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=421, tSkips=157, lifted=264, updated=168, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1718, tSkips=18, lifted=1700, updated=550, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3159, tSkips=903, lifted=2256, updated=804, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1213, tSkips=371, lifted=842, updated=94, updated/lifted=0.11).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1610, tSkips=598, lifted=1012, updated=582, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=6011, tSkips=19, lifted=5992, updated=1898, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=12544, tSkips=3800, lifted=8744, updated=2730, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3912, tSkips=1013, lifted=2899, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5381, tSkips=2527, lifted=2854, updated=1788, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28114, tSkips=31, lifted=28083, updated=6498, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=44042, tSkips=12703, lifted=31339, updated=9177, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13498, tSkips=3467, lifted=10031, updated=946, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=18851, tSkips=6872, lifted=11979, updated=6562, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=103833, tSkips=35, lifted=103798, updated=22226, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=173515, tSkips=56681, lifted=116834, updated=30761, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=49334, tSkips=11981, lifted=37353, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=65046, tSkips=27237, lifted=37809, updated=21315, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 19 milliseconds with (i=348962, tSkips=34, lifted=348928, updated=74269, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 31 milliseconds with (i=625983, tSkips=209987, lifted=415996, updated=102779, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 10 milliseconds with (i=161438, tSkips=34619, lifted=126819, updated=10240, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=215051, tSkips=76567, lifted=138484, updated=73121, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 167 milliseconds with (i=1278722, tSkips=39, lifted=1278683, updated=248809, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 233 milliseconds with (i=2421817, tSkips=869175, lifted=1552642, updated=342097, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 75 milliseconds with (i=572918, tSkips=125912, lifted=447006, updated=33802, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 42 milliseconds with (i=684935, tSkips=249303, lifted=435632, updated=235886, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 789 milliseconds with (i=4991915, tSkips=49, lifted=4991866, updated=829495, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 948 milliseconds with (i=8576024, tSkips=3190869, lifted=5385155, updated=1138960, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 270 milliseconds with (i=1955633, tSkips=487519, lifted=1468114, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 131 milliseconds with (i=2405637, tSkips=869296, lifted=1536341, updated=794751, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2553 milliseconds with (i=17667273, tSkips=53, lifted=17667220, updated=2761780, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3509 milliseconds with (i=31306047, tSkips=11880235, lifted=19425812, updated=3781960, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 772 milliseconds with (i=5467310, tSkips=1461924, lifted=4005386, updated=368644, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 681 milliseconds with (i=8028235, tSkips=3262176, lifted=4766059, updated=2550895, updated/lifted=0.54).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 6146794652083548235, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=113, tSkips=10, lifted=103, updated=41, updated/lifted=0.4).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=223, tSkips=49, lifted=174, updated=61, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=83, tSkips=33, lifted=50, updated=14, updated/lifted=0.28).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=143, tSkips=57, lifted=86, updated=50, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=464, tSkips=15, lifted=449, updated=151, updated/lifted=0.34).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=764, tSkips=168, lifted=596, updated=216, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=393, tSkips=127, lifted=266, updated=34, updated/lifted=0.13).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=411, tSkips=161, lifted=250, updated=164, updated/lifted=0.66).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1856, tSkips=19, lifted=1837, updated=560, updated/lifted=0.3).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3165, tSkips=954, lifted=2211, updated=799, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1079, tSkips=302, lifted=777, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1301, tSkips=585, lifted=716, updated=500, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7485, tSkips=25, lifted=7460, updated=1945, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=12135, tSkips=3517, lifted=8618, updated=2721, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1127, lifted=2764, updated=292, updated/lifted=0.11).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5317, tSkips=2118, lifted=3199, updated=1884, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=26225, tSkips=27, lifted=26198, updated=6536, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 3 milliseconds with (i=44653, tSkips=15142, lifted=29511, updated=9162, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=14158, tSkips=3319, lifted=10839, updated=946, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=17905, tSkips=8436, lifted=9469, updated=5977, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=103174, tSkips=34, lifted=103140, updated=22265, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=185382, tSkips=66623, lifted=118759, updated=30792, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=42355, tSkips=10705, lifted=31650, updated=3106, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=62666, tSkips=24971, lifted=37695, updated=21301, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 20 milliseconds with (i=397921, tSkips=43, lifted=397878, updated=74442, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 29 milliseconds with (i=678685, tSkips=247076, lifted=431609, updated=102641, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 11 milliseconds with (i=149902, tSkips=39127, lifted=110775, updated=10240, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 11 milliseconds with (i=208876, tSkips=77837, lifted=131039, updated=71230, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 190 milliseconds with (i=1382371, tSkips=44, lifted=1382327, updated=248836, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 223 milliseconds with (i=2356181, tSkips=850191, lifted=1505990, updated=342464, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 53 milliseconds with (i=477414, tSkips=122031, lifted=355383, updated=33802, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 48 milliseconds with (i=710977, tSkips=284430, lifted=426547, updated=232970, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 479 milliseconds with (i=4903897, tSkips=48, lifted=4903849, updated=829618, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 661 milliseconds with (i=8930435, tSkips=3213620, lifted=5716815, updated=1138609, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 164 milliseconds with (i=1686684, tSkips=439615, lifted=1247069, updated=111622, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 144 milliseconds with (i=2395714, tSkips=827161, lifted=1568553, updated=806365, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2521 milliseconds with (i=17136911, tSkips=51, lifted=17136860, updated=2761234, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3777 milliseconds with (i=31899192, tSkips=12127073, lifted=19772119, updated=3782323, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 818 milliseconds with (i=5625748, tSkips=1483298, lifted=4142450, updated=368644, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 700 milliseconds with (i=7889054, tSkips=2762828, lifted=5126226, updated=2642353, updated/lifted=0.52).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 7105486291024734541, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=90, tSkips=7, lifted=83, updated=35, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=195, tSkips=46, lifted=149, updated=60, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=100, tSkips=44, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=122, tSkips=48, lifted=74, updated=47, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=446, tSkips=13, lifted=433, updated=150, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=841, tSkips=216, lifted=625, updated=233, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=338, tSkips=106, lifted=232, updated=34, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=418, tSkips=196, lifted=222, updated=151, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1899, tSkips=20, lifted=1879, updated=550, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3583, tSkips=1146, lifted=2437, updated=797, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=965, tSkips=276, lifted=689, updated=94, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1400, tSkips=543, lifted=857, updated=547, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=6673, tSkips=22, lifted=6651, updated=1931, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=12856, tSkips=3705, lifted=9151, updated=2729, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3488, tSkips=1052, lifted=2436, updated=292, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5599, tSkips=2287, lifted=3312, updated=1925, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=27429, tSkips=30, lifted=27399, updated=6584, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=42756, tSkips=11701, lifted=31055, updated=9120, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13208, tSkips=3638, lifted=9570, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=18653, tSkips=6779, lifted=11874, updated=6569, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=101742, tSkips=34, lifted=101708, updated=22178, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=176911, tSkips=60045, lifted=116866, updated=30810, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=44867, tSkips=12846, lifted=32021, updated=3106, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=63155, tSkips=25147, lifted=38008, updated=21294, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 24 milliseconds with (i=377029, tSkips=39, lifted=376990, updated=74476, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 37 milliseconds with (i=630278, tSkips=211923, lifted=418355, updated=102600, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 12 milliseconds with (i=161354, tSkips=37725, lifted=123629, updated=10240, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 8 milliseconds with (i=210929, tSkips=89069, lifted=121860, updated=69268, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 154 milliseconds with (i=1332059, tSkips=44, lifted=1332015, updated=248753, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 194 milliseconds with (i=2352417, tSkips=845179, lifted=1507238, updated=342660, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 59 milliseconds with (i=492210, tSkips=127504, lifted=364706, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 43 milliseconds with (i=713411, tSkips=290618, lifted=422793, updated=232023, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 758 milliseconds with (i=4855207, tSkips=47, lifted=4855160, updated=829584, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 650 milliseconds with (i=9057968, tSkips=3410073, lifted=5647895, updated=1138713, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 176 milliseconds with (i=1642716, tSkips=437189, lifted=1205527, updated=111622, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 236 milliseconds with (i=2378659, tSkips=824500, lifted=1554159, updated=802288, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2966 milliseconds with (i=17840335, tSkips=54, lifted=17840281, updated=2761728, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3786 milliseconds with (i=31354350, tSkips=12525452, lifted=18828898, updated=3782316, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 1237 milliseconds with (i=5861608, tSkips=1474349, lifted=4387259, updated=368644, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 624 milliseconds with (i=7746238, tSkips=3018102, lifted=4728136, updated=2552131, updated/lifted=0.54).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = -279624296851435688, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=112, tSkips=10, lifted=102, updated=39, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=192, tSkips=46, lifted=146, updated=56, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=101, tSkips=41, lifted=60, updated=14, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=111, tSkips=49, lifted=62, updated=44, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=492, tSkips=15, lifted=477, updated=161, updated/lifted=0.34).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=776, tSkips=196, lifted=580, updated=227, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=261, tSkips=110, lifted=151, updated=34, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=411, tSkips=196, lifted=215, updated=150, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1755, tSkips=17, lifted=1738, updated=569, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3224, tSkips=759, lifted=2465, updated=796, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1203, tSkips=325, lifted=878, updated=94, updated/lifted=0.11).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1621, tSkips=633, lifted=988, updated=575, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7573, tSkips=25, lifted=7548, updated=1969, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=11590, tSkips=3317, lifted=8273, updated=2723, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=4244, tSkips=1086, lifted=3158, updated=292, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5900, tSkips=2626, lifted=3274, updated=1919, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=26410, tSkips=28, lifted=26382, updated=6560, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=45085, tSkips=13615, lifted=31470, updated=9097, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=12455, tSkips=3293, lifted=9162, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=18856, tSkips=7780, lifted=11076, updated=6373, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=102834, tSkips=34, lifted=102800, updated=22197, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 5 milliseconds with (i=163215, tSkips=52067, lifted=111148, updated=30702, updated/lifted=0.28).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=37324, tSkips=10380, lifted=26944, updated=3106, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=64281, tSkips=28480, lifted=35801, updated=20749, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 19 milliseconds with (i=381198, tSkips=39, lifted=381159, updated=74449, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 27 milliseconds with (i=647614, tSkips=228553, lifted=419061, updated=102771, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 9 milliseconds with (i=161369, tSkips=36181, lifted=125188, updated=10240, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 8 milliseconds with (i=208462, tSkips=88979, lifted=119483, updated=68644, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 175 milliseconds with (i=1330502, tSkips=42, lifted=1330460, updated=248801, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 104 milliseconds with (i=2396895, tSkips=886559, lifted=1510336, updated=342559, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 56 milliseconds with (i=494971, tSkips=128594, lifted=366377, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 37 milliseconds with (i=718885, tSkips=319184, lifted=399701, updated=227165, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 738 milliseconds with (i=4832109, tSkips=48, lifted=4832061, updated=829701, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 881 milliseconds with (i=8376643, tSkips=3154386, lifted=5222257, updated=1138556, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 236 milliseconds with (i=1708769, tSkips=419779, lifted=1288990, updated=111622, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 134 milliseconds with (i=2400074, tSkips=870323, lifted=1529751, updated=796958, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2872 milliseconds with (i=16905718, tSkips=51, lifted=16905667, updated=2761335, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3622 milliseconds with (i=31582445, tSkips=12137549, lifted=19444896, updated=3781585, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 843 milliseconds with (i=5097333, tSkips=1448140, lifted=3649193, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 652 milliseconds with (i=8074840, tSkips=3211606, lifted=4863234, updated=2584717, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = -2228689144322150137, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=107, tSkips=10, lifted=97, updated=39, updated/lifted=0.4).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=43, lifted=142, updated=63, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=108, tSkips=45, lifted=63, updated=14, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=129, tSkips=53, lifted=76, updated=49, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=472, tSkips=14, lifted=458, updated=161, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=733, tSkips=131, lifted=602, updated=210, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=295, tSkips=113, lifted=182, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=179, lifted=302, updated=176, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1935, tSkips=22, lifted=1913, updated=569, updated/lifted=0.3).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3316, tSkips=1020, lifted=2296, updated=815, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1056, tSkips=300, lifted=756, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1449, tSkips=652, lifted=797, updated=531, updated/lifted=0.67).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7232, tSkips=26, lifted=7206, updated=1924, updated/lifted=0.27).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=11492, tSkips=3085, lifted=8407, updated=2682, updated/lifted=0.32).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3581, tSkips=1045, lifted=2536, updated=292, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5353, tSkips=2245, lifted=3108, updated=1861, updated/lifted=0.6).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=27511, tSkips=29, lifted=27482, updated=6573, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=43191, tSkips=13260, lifted=29931, updated=9141, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=12687, tSkips=3501, lifted=9186, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=18770, tSkips=8974, lifted=9796, updated=5978, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=108391, tSkips=36, lifted=108355, updated=22198, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=173245, tSkips=55657, lifted=117588, updated=30776, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=41707, tSkips=11047, lifted=30660, updated=3106, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=63605, tSkips=24096, lifted=39509, updated=21694, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 20 milliseconds with (i=386336, tSkips=39, lifted=386297, updated=74335, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 25 milliseconds with (i=613075, tSkips=229266, lifted=383809, updated=102616, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 9 milliseconds with (i=144482, tSkips=37206, lifted=107276, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 7 milliseconds with (i=219505, tSkips=100240, lifted=119265, updated=68287, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 149 milliseconds with (i=1306992, tSkips=40, lifted=1306952, updated=248585, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 169 milliseconds with (i=2194892, tSkips=811391, lifted=1383501, updated=342348, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 64 milliseconds with (i=499631, tSkips=127179, lifted=372452, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 46 milliseconds with (i=707993, tSkips=283376, lifted=424617, updated=232159, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 421 milliseconds with (i=4781564, tSkips=47, lifted=4781517, updated=829262, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 567 milliseconds with (i=8704519, tSkips=3369443, lifted=5335076, updated=1138653, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 236 milliseconds with (i=1626355, tSkips=476466, lifted=1149889, updated=111622, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 178 milliseconds with (i=2336051, tSkips=966647, lifted=1369404, updated=761617, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2730 milliseconds with (i=17608794, tSkips=54, lifted=17608740, updated=2761223, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3718 milliseconds with (i=32373276, tSkips=12623733, lifted=19749543, updated=3781118, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 952 milliseconds with (i=5740343, tSkips=1416475, lifted=4323868, updated=368644, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 686 milliseconds with (i=7916696, tSkips=3267822, lifted=4648874, updated=2544468, updated/lifted=0.55).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = -1083761183081836303, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=117, tSkips=11, lifted=106, updated=41, updated/lifted=0.39).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=171, tSkips=41, lifted=130, updated=60, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=87, tSkips=38, lifted=49, updated=14, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=119, tSkips=49, lifted=70, updated=46, updated/lifted=0.66).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=367, tSkips=12, lifted=355, updated=136, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=695, tSkips=162, lifted=533, updated=221, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=261, tSkips=100, lifted=161, updated=34, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=468, tSkips=178, lifted=290, updated=171, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1852, tSkips=20, lifted=1832, updated=579, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2998, tSkips=717, lifted=2281, updated=806, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1076, tSkips=360, lifted=716, updated=94, updated/lifted=0.13).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1629, tSkips=628, lifted=1001, updated=589, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=6929, tSkips=23, lifted=6906, updated=1903, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=12444, tSkips=3572, lifted=8872, updated=2710, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3742, tSkips=955, lifted=2787, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5103, tSkips=2441, lifted=2662, updated=1765, updated/lifted=0.66).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=26207, tSkips=28, lifted=26179, updated=6540, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=45245, tSkips=14224, lifted=31021, updated=9157, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=12767, tSkips=3230, lifted=9537, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=16854, tSkips=7388, lifted=9466, updated=6013, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=98757, tSkips=34, lifted=98723, updated=22334, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 5 milliseconds with (i=167277, tSkips=58176, lifted=109101, updated=30872, updated/lifted=0.28).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=51319, tSkips=12740, lifted=38579, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=60766, tSkips=26249, lifted=34517, updated=20425, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 21 milliseconds with (i=384398, tSkips=39, lifted=384359, updated=74385, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 31 milliseconds with (i=641267, tSkips=225346, lifted=415921, updated=102668, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 14 milliseconds with (i=184301, tSkips=42174, lifted=142127, updated=10240, updated/lifted=0.07).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 8 milliseconds with (i=214126, tSkips=78635, lifted=135491, updated=72622, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 123 milliseconds with (i=1369046, tSkips=43, lifted=1369003, updated=248883, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 206 milliseconds with (i=2275923, tSkips=808067, lifted=1467856, updated=341968, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 60 milliseconds with (i=542973, tSkips=134359, lifted=408614, updated=33802, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 47 milliseconds with (i=730161, tSkips=264247, lifted=465914, updated=242017, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 758 milliseconds with (i=4986645, tSkips=49, lifted=4986596, updated=829566, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 695 milliseconds with (i=8689855, tSkips=3160614, lifted=5529241, updated=1138894, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 261 milliseconds with (i=1837617, tSkips=457006, lifted=1380611, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 189 milliseconds with (i=2434533, tSkips=910817, lifted=1523716, updated=790764, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2402 milliseconds with (i=17931888, tSkips=55, lifted=17931833, updated=2760802, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3790 milliseconds with (i=30839077, tSkips=11662440, lifted=19176637, updated=3782210, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 1191 milliseconds with (i=6221213, tSkips=1397311, lifted=4823902, updated=368644, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 905 milliseconds with (i=8221501, tSkips=3060032, lifted=5161469, updated=2629939, updated/lifted=0.51).
Contains vertex with index 0: false

