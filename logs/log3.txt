========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 2 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 18 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 162 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 8 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4211 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 168 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6249 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 7 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 126 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4632 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 167 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5899 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 122 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4027 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 164 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6415 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 4 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 123 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4148 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 162 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6015 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 123 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4971 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 164 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5974 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 125 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4618 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 166 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6118 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 122 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4205 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 164 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6022 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 122 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4756 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 168 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 6231 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 122 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4032 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 161 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5987 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=11454, tSkips=1989, lifted=9465, updated=2098, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=2800, tSkips=305, lifted=2495, updated=421, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=201258, tSkips=31243, lifted=170015, updated=44283, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=25131, tSkips=3061, lifted=22070, updated=7286, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 123 milliseconds with (i=4066126, tSkips=604060, lifted=3462066, updated=1188424, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=322921, tSkips=28166, lifted=294755, updated=183646, updated/lifted=0.62).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4485 milliseconds with (i=132334774, tSkips=19895310, lifted=112439464, updated=43428377, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 166 milliseconds with (i=8390895, tSkips=322179, lifted=8068716, updated=6944810, updated/lifted=0.86).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5934 milliseconds with (i=373052901, tSkips=3201442, lifted=369851459, updated=359492830, updated/lifted=0.97).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 38 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 32 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 403 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 358 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 52 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 32 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 414 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 270 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 37 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 32 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 445 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 359 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 45 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 31 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 290 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 360 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 46 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 33 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 414 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 331 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 37 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 32 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 411 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 328 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 37 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 31 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 415 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 285 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 46 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 31 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 421 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 330 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 49 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 31 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 426 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 363 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10347, tSkips=0, lifted=10347, updated=969, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=10831, tSkips=5308, lifted=5523, updated=377, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=92366, tSkips=0, lifted=92366, updated=6335, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 3 milliseconds with (i=121066, tSkips=56388, lifted=64678, updated=2414, updated/lifted=0.04).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 51 milliseconds with (i=577308, tSkips=0, lifted=577308, updated=31597, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 32 milliseconds with (i=839832, tSkips=376703, lifted=463129, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 403 milliseconds with (i=2706440, tSkips=0, lifted=2706440, updated=127589, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 355 milliseconds with (i=4181976, tSkips=1812244, lifted=2369732, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 51 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 35 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 8 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 167 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 185 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 63 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 46 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 757 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 961 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 268 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 201 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3136 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3477 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 794 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 703 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 4 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 18 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 31 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 9 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 9 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 158 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 172 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 61 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 46 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 576 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 730 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 269 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 197 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2795 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3636 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 889 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 730 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 19 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 31 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 9 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 9 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 180 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 226 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 64 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 47 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 612 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 586 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 271 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 189 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3301 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3378 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 860 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 665 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 18 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 31 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 9 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 9 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 185 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 205 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 63 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 49 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 477 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 578 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 177 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 140 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2995 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3466 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 798 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 654 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 18 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 31 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 8 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 8 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 165 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 188 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 61 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 49 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 464 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 619 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 180 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 142 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2763 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3449 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 909 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 654 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 19 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 32 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 8 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 8 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 185 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 190 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 64 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 45 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 467 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 591 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 176 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 144 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2916 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 4012 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 715 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 799 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 18 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 31 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 9 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 175 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 224 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 63 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 48 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 692 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 874 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 273 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 175 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3335 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3681 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 980 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 821 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 19 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 30 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 9 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 8 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 182 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 223 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 38 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 46 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 759 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 900 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 263 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 189 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3612 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3465 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 969 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 641 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 18 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 34 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 8 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 9 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 182 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 100 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 61 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 47 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 757 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 866 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 195 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 208 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3678 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3507 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 831 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 669 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Random order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=84, tSkips=6, lifted=78, updated=34, updated/lifted=0.44).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=185, tSkips=50, lifted=135, updated=63, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=92, tSkips=36, lifted=56, updated=14, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=116, tSkips=47, lifted=69, updated=48, updated/lifted=0.7).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=435, tSkips=14, lifted=421, updated=150, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=827, tSkips=200, lifted=627, updated=235, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=310, tSkips=127, lifted=183, updated=34, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=481, tSkips=192, lifted=289, updated=170, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1752, tSkips=18, lifted=1734, updated=545, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2734, tSkips=688, lifted=2046, updated=767, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=1113, tSkips=318, lifted=795, updated=94, updated/lifted=0.12).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1450, tSkips=608, lifted=842, updated=541, updated/lifted=0.64).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=7613, tSkips=26, lifted=7587, updated=1965, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=13181, tSkips=3808, lifted=9373, updated=2758, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=3891, tSkips=1031, lifted=2860, updated=292, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=5374, tSkips=2081, lifted=3293, updated=1902, updated/lifted=0.58).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=28585, tSkips=31, lifted=28554, updated=6620, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=44960, tSkips=13514, lifted=31446, updated=9183, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=13276, tSkips=3388, lifted=9888, updated=946, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=19318, tSkips=7998, lifted=11320, updated=6425, updated/lifted=0.57).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=105295, tSkips=34, lifted=105261, updated=22244, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=178783, tSkips=60324, lifted=118459, updated=30779, updated/lifted=0.26).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 2 milliseconds with (i=47517, tSkips=10775, lifted=36742, updated=3106, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 1 milliseconds with (i=61031, tSkips=28662, lifted=32369, updated=19848, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 18 milliseconds with (i=347393, tSkips=35, lifted=347358, updated=74574, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 30 milliseconds with (i=688830, tSkips=235701, lifted=453129, updated=102884, updated/lifted=0.23).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 10 milliseconds with (i=137897, tSkips=38229, lifted=99668, updated=10240, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 8 milliseconds with (i=218476, tSkips=81435, lifted=137041, updated=72726, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 176 milliseconds with (i=1379447, tSkips=44, lifted=1379403, updated=249006, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 111 milliseconds with (i=2390629, tSkips=846894, lifted=1543735, updated=342481, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 65 milliseconds with (i=523768, tSkips=129885, lifted=393883, updated=33802, updated/lifted=0.09).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 46 milliseconds with (i=709550, tSkips=255875, lifted=453675, updated=240973, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 530 milliseconds with (i=4961087, tSkips=50, lifted=4961037, updated=829885, updated/lifted=0.17).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 607 milliseconds with (i=8565404, tSkips=3309435, lifted=5255969, updated=1138102, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 272 milliseconds with (i=1840547, tSkips=438708, lifted=1401839, updated=111622, updated/lifted=0.08).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 199 milliseconds with (i=2512907, tSkips=960799, lifted=1552108, updated=792881, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2955 milliseconds with (i=18840408, tSkips=58, lifted=18840350, updated=2761136, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3878 milliseconds with (i=30679972, tSkips=11682081, lifted=18997891, updated=3781857, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 891 milliseconds with (i=5140683, tSkips=1429579, lifted=3711104, updated=368644, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 679 milliseconds with (i=8148325, tSkips=3367542, lifted=4780783, updated=2534057, updated/lifted=0.53).
Contains vertex with index 0: false

