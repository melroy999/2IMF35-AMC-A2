========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -4962768465676381896, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 4437113781045784766, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -6688467811848818630, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -8292973307042192125, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -7423979211207825555, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 6146794652083548235, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 7105486291024734541, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -279624296851435688, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -2228689144322150137, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                    UNIT TESTS                    ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -1083761183081836303, linear = true

Parity game: [test_1.gm]
Solving: test_1.gm(d = 1, n = 1)
[0]
Calculated in 1 milliseconds with (i=1, tSkips=0, lifted=1, updated=0, updated/lifted=0.0).
Contains vertex with index 0: true

Parity game: [test_2.gm]
Solving: test_2.gm(d = 2, n = 2)
[0, 1]
Calculated in 1 milliseconds with (i=4, tSkips=0, lifted=4, updated=1, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [test_3.gm]
Solving: test_3.gm(d = 4, n = 4)
[1, 2]
Calculated in 1 milliseconds with (i=11, tSkips=3, lifted=8, updated=4, updated/lifted=0.5).
Contains vertex with index 0: false

Parity game: [test_4.gm]
Solving: test_4.gm(d = 3, n = 5)
[0, 4]
Calculated in 1 milliseconds with (i=26, tSkips=2, lifted=24, updated=9, updated/lifted=0.38).
Contains vertex with index 0: true

Parity game: [test_5.gm]
Solving: test_5.gm(d = 3, n = 6)
[0, 2, 3]
Calculated in 1 milliseconds with (i=29, tSkips=3, lifted=26, updated=8, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [test_6.gm]
Solving: test_6.gm(d = 4, n = 7)
[0, 3, 4]
Calculated in 1 milliseconds with (i=28, tSkips=6, lifted=22, updated=15, updated/lifted=0.68).
Contains vertex with index 0: true

Parity game: [test_7.gm]
Solving: test_7.gm(d = 9, n = 8)
[]
Calculated in 1 milliseconds with (i=26, tSkips=8, lifted=18, updated=13, updated/lifted=0.72).
Contains vertex with index 0: false

Parity game: [test_8.gm]
Solving: test_8.gm(d = 4, n = 7)
[]
Calculated in 1 milliseconds with (i=46, tSkips=8, lifted=38, updated=31, updated/lifted=0.82).
Contains vertex with index 0: false

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -4962768465676381896, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 3 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 2 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 28 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 6 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 275 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 168 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 9300 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7146 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 4437113781045784766, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 17 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 5 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 215 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 150 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 8822 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7345 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -6688467811848818630, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 7 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 4 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 211 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 146 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 9212 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7627 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -8292973307042192125, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 7 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 5 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 209 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 147 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 8957 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7591 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -7423979211207825555, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 7 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 4 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 210 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 147 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 9030 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7316 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 6146794652083548235, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 7 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 5 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 212 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 147 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 8937 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7260 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 7105486291024734541, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 7 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 4 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 210 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 147 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 8811 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7283 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -279624296851435688, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 7 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 4 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 216 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 148 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 8821 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7236 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -2228689144322150137, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 7 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 4 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 211 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 147 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 9019 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7326 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -1083761183081836303, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2367, tSkips=165, lifted=2202, updated=1132, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=764, tSkips=33, lifted=731, updated=413, updated/lifted=0.56).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=13558, tSkips=707, lifted=12851, updated=9570, updated/lifted=0.74).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=8560, tSkips=171, lifted=8389, updated=6805, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 7 milliseconds with (i=246935, tSkips=3503, lifted=243432, updated=216858, updated/lifted=0.89).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 4 milliseconds with (i=188738, tSkips=957, lifted=187781, updated=178757, updated/lifted=0.95).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 240 milliseconds with (i=8290961, tSkips=20597, lifted=8270364, updated=7809180, updated/lifted=0.94).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 193 milliseconds with (i=6950178, tSkips=6135, lifted=6944043, updated=6889277, updated/lifted=0.99).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
[57344, 32770, 81925, 73732, 49158, 57351, 32784, 57361, 49170, 81940, 73751, 49177, 57369, 81946, 57375, 49187, 81954, 57382, 32809, 49195, ...]
Calculated in 8798 milliseconds with (i=393154012, tSkips=142029, lifted=393011983, updated=383891849, updated/lifted=0.98).
Contains vertex with index 0: false

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 7224 milliseconds with (i=359382340, tSkips=44865, lifted=359337475, updated=358930517, updated/lifted=1.0).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -4962768465676381896, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 64 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 27 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 4437113781045784766, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 12 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 63 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 28 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -6688467811848818630, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 12 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 64 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 27 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -8292973307042192125, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 12 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 64 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 27 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -7423979211207825555, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 12 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 66 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 28 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 6146794652083548235, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 65 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 28 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 7105486291024734541, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 65 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 27 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -279624296851435688, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 12 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 65 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 27 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -2228689144322150137, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 64 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 27 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -1083761183081836303, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=377, lifted=1064, updated=377, updated/lifted=0.35).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 2 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=2414, lifted=10354, updated=2414, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 12 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 5 milliseconds with (i=72564, tSkips=11339, lifted=61225, updated=11339, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 63 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 27 milliseconds with (i=305839, tSkips=42449, lifted=263390, updated=42449, updated/lifted=0.16).
Contains vertex with index 0: true

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -4962768465676381896, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 17 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 46 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 6 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 169 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 81 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 207 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 24 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1635 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 381 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 982 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 104 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1184 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3592 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 358 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 4437113781045784766, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 17 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 45 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 5 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 169 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 71 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 206 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 23 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1633 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 369 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 1014 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 105 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1204 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3452 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 367 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -6688467811848818630, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 18 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 16 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 46 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 6 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 167 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 82 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 180 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 24 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1635 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 315 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 982 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 104 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1474 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3410 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 336 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -8292973307042192125, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 17 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 47 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 6 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 169 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 83 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 212 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 24 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1679 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 386 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 838 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 109 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1599 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3641 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 346 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -7423979211207825555, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 17 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 44 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 5 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 169 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 74 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 201 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 22 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1633 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 369 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 996 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 97 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1274 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3395 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 340 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 6146794652083548235, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 17 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 45 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 5 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 169 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 74 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 203 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 18 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1620 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 357 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 817 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 93 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1326 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3500 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 372 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 7105486291024734541, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 17 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 44 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 5 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 168 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 58 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 201 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 23 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1633 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 383 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 925 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 105 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1189 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3422 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 347 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -279624296851435688, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 17 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 16 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 47 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 6 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 170 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 55 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 207 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 23 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1635 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 243 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 871 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 107 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1078 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3671 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 338 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -2228689144322150137, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 17 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 45 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 6 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 169 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 83 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 219 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 23 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1634 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 228 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 844 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 80 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1057 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3393 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 334 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = -1083761183081836303, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=51, tSkips=3, lifted=48, updated=28, updated/lifted=0.58).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=90, tSkips=13, lifted=77, updated=52, updated/lifted=0.68).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=13, lifted=30, updated=14, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=69, tSkips=20, lifted=49, updated=44, updated/lifted=0.9).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=232, tSkips=3, lifted=229, updated=112, updated/lifted=0.49).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=418, tSkips=38, lifted=380, updated=207, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=33, lifted=83, updated=34, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=257, tSkips=63, lifted=194, updated=161, updated/lifted=0.83).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=974, tSkips=3, lifted=971, updated=408, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=1589, tSkips=121, lifted=1468, updated=722, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=93, lifted=243, updated=94, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=779, tSkips=200, lifted=579, updated=500, updated/lifted=0.86).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4073, tSkips=3, lifted=4070, updated=1448, updated/lifted=0.36).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=6248, tSkips=395, lifted=5853, updated=2445, updated/lifted=0.42).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=291, lifted=779, updated=292, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=2803, tSkips=636, lifted=2167, updated=1724, updated/lifted=0.8).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=15770, tSkips=3, lifted=15767, updated=4939, updated/lifted=0.31).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=22116, tSkips=1300, lifted=20816, updated=8132, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=945, lifted=2618, updated=946, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=10414, tSkips=2027, lifted=8387, updated=5967, updated/lifted=0.71).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=60257, tSkips=3, lifted=60254, updated=16830, updated/lifted=0.28).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 12 milliseconds with (i=86372, tSkips=4289, lifted=82083, updated=28442, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=3105, lifted=7965, updated=3106, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 17 milliseconds with (i=39477, tSkips=6474, lifted=33003, updated=20676, updated/lifted=0.63).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=230118, tSkips=3, lifted=230115, updated=57504, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 45 milliseconds with (i=313746, tSkips=14161, lifted=299585, updated=92860, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 5 milliseconds with (i=37835, tSkips=10239, lifted=27596, updated=10240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 169 milliseconds with (i=150672, tSkips=20720, lifted=129952, updated=71544, updated/lifted=0.55).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 82 milliseconds with (i=866457, tSkips=3, lifted=866454, updated=195675, updated/lifted=0.23).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 215 milliseconds with (i=1060653, tSkips=46766, lifted=1013887, updated=300710, updated/lifted=0.3).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 24 milliseconds with (i=115465, tSkips=33801, lifted=81664, updated=33802, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1634 milliseconds with (i=575851, tSkips=66447, lifted=509404, updated=247063, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 227 milliseconds with (i=3223567, tSkips=3, lifted=3223564, updated=663384, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 849 milliseconds with (i=3798583, tSkips=154453, lifted=3644130, updated=996744, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 87 milliseconds with (i=396227, tSkips=111621, lifted=284606, updated=111622, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1074 milliseconds with (i=11882974, tSkips=3, lifted=11882971, updated=2243522, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 3383 milliseconds with (i=14877857, tSkips=510119, lifted=14367738, updated=3559840, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 328 milliseconds with (i=1349356, tSkips=368643, lifted=980713, updated=368644, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

