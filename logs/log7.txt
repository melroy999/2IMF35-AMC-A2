========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 2 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 4 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 2 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 35 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 28 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 828 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 734 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 21 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 17 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 806 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 707 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 20 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 17 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 818 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 706 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 20 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 17 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 801 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 712 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 20 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 17 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 800 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 754 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 20 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 17 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 801 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 720 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 20 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 17 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 788 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 721 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 20 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 17 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 813 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 718 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 20 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 17 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 804 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 718 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=2347, tSkips=677, lifted=1670, updated=1016, updated/lifted=0.61).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=911, tSkips=94, lifted=817, updated=376, updated/lifted=0.46).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 1 milliseconds with (i=21619, tSkips=3195, lifted=18424, updated=10226, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=14230, tSkips=655, lifted=13575, updated=6744, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 20 milliseconds with (i=428209, tSkips=17028, lifted=411181, updated=211792, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 17 milliseconds with (i=361052, tSkips=4325, lifted=356727, updated=178501, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 810 milliseconds with (i=15416689, tSkips=257261, lifted=15159428, updated=7684638, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 710 milliseconds with (i=13804728, tSkips=28914, lifted=13775814, updated=6890080, updated/lifted=0.5).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 51 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 23 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 46 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 24 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 51 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 24 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 52 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 24 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 52 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 24 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 51 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 24 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 51 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 24 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 52 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 24 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 51 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 22 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2620, tSkips=0, lifted=2620, updated=832, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1441, tSkips=0, lifted=1441, updated=377, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=19018, tSkips=0, lifted=19018, updated=5472, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 1 milliseconds with (i=12768, tSkips=0, lifted=12768, updated=2414, updated/lifted=0.19).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 10 milliseconds with (i=94748, tSkips=0, lifted=94748, updated=24033, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=72564, tSkips=0, lifted=72564, updated=11339, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 52 milliseconds with (i=367095, tSkips=0, lifted=367095, updated=86629, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 24 milliseconds with (i=305839, tSkips=0, lifted=305839, updated=42449, updated/lifted=0.14).
Contains vertex with index 0: true

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 15 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 18 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 37 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 173 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 65 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 192 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 20 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1634 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 328 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 842 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 86 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 15949 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1027 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2769 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 259 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 14 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 18 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 37 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 172 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 107 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 169 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 18 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1634 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 274 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 691 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 87 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 16064 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 888 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2652 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 258 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 14 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 18 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 37 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 172 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 68 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 170 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 13 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1636 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 187 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 656 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 66 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 16177 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 905 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2659 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 269 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 15 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 18 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 37 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 172 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 70 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 150 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 19 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1635 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 277 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 742 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 66 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 15989 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1079 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2979 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 309 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 14 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 19 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 37 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 172 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 66 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 170 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 18 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1632 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 180 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 660 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 65 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 15939 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 827 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2648 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 256 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 14 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 18 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 38 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 172 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 69 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 176 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 20 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1642 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 181 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 662 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 62 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 16355 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 844 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2770 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 257 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 15 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 18 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 37 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 172 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 70 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 176 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 19 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1640 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 185 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 812 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 68 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 15883 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 846 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2654 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 253 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 14 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 19 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 36 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 172 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 66 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 175 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 20 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1635 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 210 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 744 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 67 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 15937 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 886 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2659 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 252 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 14 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 18 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 37 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 172 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 69 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 176 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 20 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1643 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 181 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 654 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 62 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 15950 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 858 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2736 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 254 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Predecessors with diamond first heuristic and repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=69, tSkips=0, lifted=69, updated=31, updated/lifted=0.45).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=139, tSkips=7, lifted=132, updated=61, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=43, tSkips=5, lifted=38, updated=14, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=127, tSkips=20, lifted=107, updated=63, updated/lifted=0.59).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=269, tSkips=0, lifted=269, updated=113, updated/lifted=0.42).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=662, tSkips=5, lifted=657, updated=240, updated/lifted=0.37).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=116, tSkips=21, lifted=95, updated=34, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=647, tSkips=40, lifted=607, updated=297, updated/lifted=0.49).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=1095, tSkips=0, lifted=1095, updated=408, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=2557, tSkips=3, lifted=2554, updated=845, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=336, tSkips=37, lifted=299, updated=94, updated/lifted=0.31).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1013, tSkips=119, lifted=894, updated=500, updated/lifted=0.56).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=4478, tSkips=0, lifted=4478, updated=1448, updated/lifted=0.32).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=8289, tSkips=255, lifted=8034, updated=2848, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=1070, tSkips=65, lifted=1005, updated=292, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=3586, tSkips=394, lifted=3192, updated=1724, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=17104, tSkips=0, lifted=17104, updated=4939, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 2 milliseconds with (i=28813, tSkips=578, lifted=28235, updated=9450, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=3563, tSkips=817, lifted=2746, updated=946, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=13006, tSkips=1298, lifted=11708, updated=5967, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=64649, tSkips=0, lifted=64649, updated=16830, updated/lifted=0.26).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 15 milliseconds with (i=137703, tSkips=2711, lifted=134992, updated=32719, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 1 milliseconds with (i=11070, tSkips=2806, lifted=8264, updated=3106, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 18 milliseconds with (i=48048, tSkips=4286, lifted=43762, updated=20676, updated/lifted=0.47).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 13 milliseconds with (i=244583, tSkips=0, lifted=244583, updated=57504, updated/lifted=0.24).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 37 milliseconds with (i=384112, tSkips=9656, lifted=374456, updated=106856, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 4 milliseconds with (i=37835, tSkips=8508, lifted=29327, updated=10240, updated/lifted=0.35).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 172 milliseconds with (i=178984, tSkips=14159, lifted=164825, updated=71544, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 65 milliseconds with (i=914098, tSkips=0, lifted=914098, updated=195675, updated/lifted=0.21).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 170 milliseconds with (i=1299386, tSkips=11789, lifted=1287597, updated=348094, updated/lifted=0.27).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 12 milliseconds with (i=115465, tSkips=27816, lifted=87649, updated=33802, updated/lifted=0.39).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 1634 milliseconds with (i=669370, tSkips=46764, lifted=622606, updated=247063, updated/lifted=0.4).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 192 milliseconds with (i=3380685, tSkips=0, lifted=3380685, updated=663384, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 661 milliseconds with (i=4527295, tSkips=1023, lifted=4526272, updated=1152320, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 66 milliseconds with (i=396227, tSkips=100769, lifted=295458, updated=111622, updated/lifted=0.38).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 15867 milliseconds with (i=2500030, tSkips=154451, lifted=2345579, updated=850274, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 856 milliseconds with (i=12401054, tSkips=0, lifted=12401054, updated=2243522, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 2659 milliseconds with (i=17427311, tSkips=269122, lifted=17158189, updated=4069842, updated/lifted=0.24).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 268 milliseconds with (i=1349356, tSkips=263657, lifted=1085699, updated=368644, updated/lifted=0.34).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
The calculation hit the timeout limit. Proceeding to next calculation.

