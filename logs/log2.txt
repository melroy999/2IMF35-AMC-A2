========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 3 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 21 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 2 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 203 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 9 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4703 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 168 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5922 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 5 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 158 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 9 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4427 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 163 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5636 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 5 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 137 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 5346 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 153 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5638 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 5 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 160 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4575 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 152 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5475 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 4 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 158 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4268 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 158 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5549 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 4 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 163 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 5000 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 156 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5698 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 5 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 156 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 5253 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 166 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5670 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 4 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 161 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 5073 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 166 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5637 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 5 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 163 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4414 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 154 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5436 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===                     ELEVATOR                     ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [elevator2_2.gm]
Solving: elevator2_2.gm(d = 3, n = 168)
[32, 99, 36, 165, 77, 109, 141, 47, 84, 149, 88, 25, 155]
Calculated in 1 milliseconds with (i=18082, tSkips=3120, lifted=14962, updated=2101, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [elevator1_2.gm]
Solving: elevator1_2.gm(d = 3, n = 168)
[0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, ...]
Calculated in 1 milliseconds with (i=4110, tSkips=473, lifted=3637, updated=421, updated/lifted=0.12).
Contains vertex with index 0: true

Parity game: [elevator2_3.gm]
Solving: elevator2_3.gm(d = 3, n = 686)
[257, 66, 322, 642, 196, 389, 584, 266, 204, 653, 334, 399, 464, 209, 595, 659, 470, 215, 601, 667, ...]
Calculated in 5 milliseconds with (i=277809, tSkips=45171, lifted=232638, updated=44283, updated/lifted=0.19).
Contains vertex with index 0: false

Parity game: [elevator1_3.gm]
Solving: elevator1_3.gm(d = 3, n = 658)
[0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, ...]
Calculated in 1 milliseconds with (i=33599, tSkips=4503, lifted=29096, updated=7286, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [elevator2_4.gm]
Solving: elevator2_4.gm(d = 3, n = 3304)
[1795, 2309, 3077, 1544, 1801, 2315, 3083, 782, 1554, 2322, 3093, 790, 1815, 1562, 3099, 2332, 1570, 2340, 3110, 1576, ...]
Calculated in 158 milliseconds with (i=6905481, tSkips=1187252, lifted=5718229, updated=1188462, updated/lifted=0.21).
Contains vertex with index 0: false

Parity game: [elevator1_4.gm]
Solving: elevator1_4.gm(d = 3, n = 3136)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, ...]
Calculated in 7 milliseconds with (i=387317, tSkips=41145, lifted=346172, updated=183646, updated/lifted=0.53).
Contains vertex with index 0: true

Parity game: [elevator2_5.gm]
Solving: elevator2_5.gm(d = 3, n = 19082)
[7170, 8195, 7178, 14346, 8203, 13325, 7184, 14352, 8211, 7191, 12312, 4122, 8218, 14362, 9246, 5152, 13344, 7201, 14370, 4131, ...]
Calculated in 4290 milliseconds with (i=243148001, tSkips=44544766, lifted=198603235, updated=43429566, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [elevator1_5.gm]
Solving: elevator1_5.gm(d = 3, n = 18298)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, ...]
Calculated in 153 milliseconds with (i=9091741, tSkips=477967, lifted=8613774, updated=6944858, updated/lifted=0.81).
Contains vertex with index 0: true

Parity game: [elevator2_6.gm]
Solving: elevator2_6.gm(d = 3, n = 130032)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_6.gm]
Solving: elevator1_6.gm(d = 3, n = 126392)
[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, ...]
Calculated in 5659 milliseconds with (i=379858572, tSkips=4803933, lifted=375054639, updated=359495586, updated/lifted=0.96).
Contains vertex with index 0: true

Parity game: [elevator2_7.gm]
Solving: elevator2_7.gm(d = 3, n = 1022910)
The calculation hit the timeout limit. Proceeding to next calculation.

Parity game: [elevator1_7.gm]
Solving: elevator1_7.gm(d = 3, n = 1005410)
The calculation hit the timeout limit. Proceeding to next calculation.

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 33 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 22 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 249 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 197 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 30 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 21 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 245 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 204 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 29 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 20 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 152 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 199 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 27 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 22 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 313 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 201 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 29 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 20 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 267 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 216 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 29 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 20 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 312 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 206 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 29 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 22 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 243 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 211 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 30 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 21 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 242 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 200 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 36 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 22 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 263 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 198 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===        GERMAN'S CACHE COHERENCE PROTOCOL         ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [german_linear_2.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_2.invariantly_eventually_fair_shared_access.gm(d = 3, n = 987)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=13720, tSkips=0, lifted=13720, updated=1259, updated/lifted=0.09).
Contains vertex with index 0: true

Parity game: [german_linear_2.infinite_run_no_access.gm]
Solving: german_linear_2.infinite_run_no_access.gm(d = 2, n = 550)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=11526, tSkips=5560, lifted=5966, updated=377, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_3.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_3.invariantly_eventually_fair_shared_access.gm(d = 3, n = 6503)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=115800, tSkips=0, lifted=115800, updated=7842, updated/lifted=0.07).
Contains vertex with index 0: true

Parity game: [german_linear_3.infinite_run_no_access.gm]
Solving: german_linear_3.infinite_run_no_access.gm(d = 2, n = 3793)
[0, 2048, 1, 2049, 2, 2050, 3, 2051, 4, 2052, 5, 2053, 6, 2054, 7, 2055, 8, 2056, 9, 2057, ...]
Calculated in 2 milliseconds with (i=136238, tSkips=62557, lifted=73681, updated=2414, updated/lifted=0.03).
Contains vertex with index 0: true

Parity game: [german_linear_4.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_4.invariantly_eventually_fair_shared_access.gm(d = 3, n = 31061)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 34 milliseconds with (i=677924, tSkips=0, lifted=677924, updated=38254, updated/lifted=0.06).
Contains vertex with index 0: true

Parity game: [german_linear_4.infinite_run_no_access.gm]
Solving: german_linear_4.infinite_run_no_access.gm(d = 2, n = 18211)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 20 milliseconds with (i=890598, tSkips=391470, lifted=499128, updated=11339, updated/lifted=0.02).
Contains vertex with index 0: true

Parity game: [german_linear_5.invariantly_eventually_fair_shared_access.gm]
Solving: german_linear_5.invariantly_eventually_fair_shared_access.gm(d = 3, n = 118207)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 176 milliseconds with (i=3057016, tSkips=0, lifted=3057016, updated=150296, updated/lifted=0.05).
Contains vertex with index 0: true

Parity game: [german_linear_5.infinite_run_no_access.gm]
Solving: german_linear_5.infinite_run_no_access.gm(d = 2, n = 69334)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 203 milliseconds with (i=4291733, tSkips=1806150, lifted=2485583, updated=42449, updated/lifted=0.02).
Contains vertex with index 0: true

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 5 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 16 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 28 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 14 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 119 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 188 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 105 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 61 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 491 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 602 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 433 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 248 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1913 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 865 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 554 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 355 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 5 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 25 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 11 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 122 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 176 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 103 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 80 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 473 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 762 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 433 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 214 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 636 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 923 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 833 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 383 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 16 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 30 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 14 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 11 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 164 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 175 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 105 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 56 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 304 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 909 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 442 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 241 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1317 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 1030 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 518 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 543 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 3 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 7 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 27 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 14 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 112 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 172 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 37 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 59 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 478 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 372 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 442 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 235 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1002 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 1032 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 891 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 562 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 2 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 16 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 27 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 14 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 118 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 171 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 107 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 46 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 564 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 689 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 285 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 257 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 998 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 1224 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 1011 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 562 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 16 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 27 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 14 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 11 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 120 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 130 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 117 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 57 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 499 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 708 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 438 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 235 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 642 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 949 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 528 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 627 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 16 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 25 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 14 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 11 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 128 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 168 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 101 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 57 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 568 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 696 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 421 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 210 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 692 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 965 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 703 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 403 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 15 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 25 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 14 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 135 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 130 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 107 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 57 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 613 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 248 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 172 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 109 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 688 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 895 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 591 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 358 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 5 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 16 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 25 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 14 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 118 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 72 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 111 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 58 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 485 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 636 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 432 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 241 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 787 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 852 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 779 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 543 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

========================================================
===               DINING PHILOSOPHERS                ===
========================================================

>>> Strategy: [Input order with repetition], seed = 0, linear = true

Parity game: [dining_2.plato_infinitely_often_can_eat.gm]
Solving: dining_2.plato_infinitely_often_can_eat.gm(d = 2, n = 14)
[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12]
Calculated in 1 milliseconds with (i=134, tSkips=11, lifted=123, updated=45, updated/lifted=0.37).
Contains vertex with index 0: true

Parity game: [dining_2.invariantly_possibly_eat.gm]
Solving: dining_2.invariantly_possibly_eat.gm(d = 4, n = 23)
[16, 17, 18, 19, 20, 21, 11, 12, 13, 14]
Calculated in 1 milliseconds with (i=234, tSkips=50, lifted=184, updated=66, updated/lifted=0.36).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_plato_starves.gm]
Solving: dining_2.invariantly_plato_starves.gm(d = 2, n = 18)
[16, 4, 7, 11, 15]
Calculated in 1 milliseconds with (i=146, tSkips=58, lifted=88, updated=14, updated/lifted=0.16).
Contains vertex with index 0: false

Parity game: [dining_2.invariantly_inevitably_eat.gm]
Solving: dining_2.invariantly_inevitably_eat.gm(d = 4, n = 23)
[16, 21, 14]
Calculated in 1 milliseconds with (i=150, tSkips=54, lifted=96, updated=51, updated/lifted=0.53).
Contains vertex with index 0: false

Parity game: [dining_3.plato_infinitely_often_can_eat.gm]
Solving: dining_3.plato_infinitely_often_can_eat.gm(d = 2, n = 41)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, ...]
Calculated in 1 milliseconds with (i=561, tSkips=17, lifted=544, updated=181, updated/lifted=0.33).
Contains vertex with index 0: true

Parity game: [dining_3.invariantly_possibly_eat.gm]
Solving: dining_3.invariantly_possibly_eat.gm(d = 4, n = 73)
[64, 65, 66, 67, 68, 69, 70, 71, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, ...]
Calculated in 1 milliseconds with (i=951, tSkips=190, lifted=761, updated=252, updated/lifted=0.33).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_plato_starves.gm]
Solving: dining_3.invariantly_plato_starves.gm(d = 2, n = 54)
[34, 36, 5, 38, 39, 9, 41, 42, 12, 44, 14, 46, 48, 17, 19, 51, 52, 24, 25, 28, ...]
Calculated in 1 milliseconds with (i=510, tSkips=158, lifted=352, updated=34, updated/lifted=0.1).
Contains vertex with index 0: false

Parity game: [dining_3.invariantly_inevitably_eat.gm]
Solving: dining_3.invariantly_inevitably_eat.gm(d = 4, n = 73)
[64, 49, 50, 71, 40, 43, 45, 46, 62, 63]
Calculated in 1 milliseconds with (i=497, tSkips=174, lifted=323, updated=175, updated/lifted=0.54).
Contains vertex with index 0: false

Parity game: [dining_4.plato_infinitely_often_can_eat.gm]
Solving: dining_4.plato_infinitely_often_can_eat.gm(d = 2, n = 131)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=2239, tSkips=23, lifted=2216, updated=636, updated/lifted=0.29).
Contains vertex with index 0: true

Parity game: [dining_4.invariantly_possibly_eat.gm]
Solving: dining_4.invariantly_possibly_eat.gm(d = 4, n = 239)
[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, ...]
Calculated in 1 milliseconds with (i=3879, tSkips=827, lifted=3052, updated=873, updated/lifted=0.29).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_plato_starves.gm]
Solving: dining_4.invariantly_plato_starves.gm(d = 2, n = 174)
[128, 130, 132, 6, 134, 135, 137, 11, 139, 141, 142, 15, 143, 145, 18, 147, 20, 149, 150, 24, ...]
Calculated in 1 milliseconds with (i=2058, tSkips=553, lifted=1505, updated=94, updated/lifted=0.06).
Contains vertex with index 0: false

Parity game: [dining_4.invariantly_inevitably_eat.gm]
Solving: dining_4.invariantly_inevitably_eat.gm(d = 4, n = 239)
[128, 192, 194, 131, 195, 133, 197, 134, 198, 135, 199, 139, 203, 204, 141, 142, 206, 143, 146, 147, ...]
Calculated in 1 milliseconds with (i=1851, tSkips=686, lifted=1165, updated=611, updated/lifted=0.52).
Contains vertex with index 0: false

Parity game: [dining_5.plato_infinitely_often_can_eat.gm]
Solving: dining_5.plato_infinitely_often_can_eat.gm(d = 2, n = 428)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=8699, tSkips=29, lifted=8670, updated=2184, updated/lifted=0.25).
Contains vertex with index 0: true

Parity game: [dining_5.invariantly_possibly_eat.gm]
Solving: dining_5.invariantly_possibly_eat.gm(d = 4, n = 787)
[393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, ...]
Calculated in 1 milliseconds with (i=15228, tSkips=3450, lifted=11778, updated=2969, updated/lifted=0.25).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_plato_starves.gm]
Solving: dining_5.invariantly_plato_starves.gm(d = 2, n = 570)
[512, 514, 516, 518, 7, 520, 521, 523, 13, 525, 526, 528, 18, 530, 532, 533, 22, 534, 535, 25, ...]
Calculated in 1 milliseconds with (i=7530, tSkips=1781, lifted=5749, updated=292, updated/lifted=0.05).
Contains vertex with index 0: false

Parity game: [dining_5.invariantly_inevitably_eat.gm]
Solving: dining_5.invariantly_inevitably_eat.gm(d = 4, n = 787)
[770, 771, 516, 772, 773, 518, 774, 521, 522, 523, 526, 527, 785, 535, 536, 542, 543, 545, 546, 547, ...]
Calculated in 1 milliseconds with (i=6791, tSkips=2564, lifted=4227, updated=2153, updated/lifted=0.51).
Contains vertex with index 0: false

Parity game: [dining_6.plato_infinitely_often_can_eat.gm]
Solving: dining_6.plato_infinitely_often_can_eat.gm(d = 2, n = 1409)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 1 milliseconds with (i=32997, tSkips=35, lifted=32962, updated=7334, updated/lifted=0.22).
Contains vertex with index 0: true

Parity game: [dining_6.invariantly_possibly_eat.gm]
Solving: dining_6.invariantly_possibly_eat.gm(d = 4, n = 2597)
[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, ...]
Calculated in 1 milliseconds with (i=58168, tSkips=13856, lifted=44312, updated=9929, updated/lifted=0.22).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_plato_starves.gm]
Solving: dining_6.invariantly_plato_starves.gm(d = 2, n = 1878)
[8, 15, 21, 26, 30, 33, 35, 41, 46, 51, 55, 58, 60, 66, 70, 74, 77, 79, 84, 87, ...]
Calculated in 1 milliseconds with (i=29582, tSkips=7134, lifted=22448, updated=946, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_6.invariantly_inevitably_eat.gm]
Solving: dining_6.invariantly_inevitably_eat.gm(d = 4, n = 2597)
[2049, 2050, 2055, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2069, 2070, 2071, 2072, 2074, 2076, 2082, 2084, 2087, ...]
Calculated in 1 milliseconds with (i=27837, tSkips=11866, lifted=15971, updated=7659, updated/lifted=0.48).
Contains vertex with index 0: false

Parity game: [dining_7.plato_infinitely_often_can_eat.gm]
Solving: dining_7.plato_infinitely_often_can_eat.gm(d = 2, n = 4649)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 4 milliseconds with (i=123075, tSkips=41, lifted=123034, updated=24485, updated/lifted=0.2).
Contains vertex with index 0: true

Parity game: [dining_7.invariantly_possibly_eat.gm]
Solving: dining_7.invariantly_possibly_eat.gm(d = 4, n = 8575)
[8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, ...]
Calculated in 6 milliseconds with (i=218038, tSkips=54014, lifted=164024, updated=33058, updated/lifted=0.2).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_plato_starves.gm]
Solving: dining_7.invariantly_plato_starves.gm(d = 2, n = 6198)
[9, 17, 24, 30, 35, 39, 42, 44, 51, 57, 63, 68, 72, 75, 77, 84, 89, 94, 98, 101, ...]
Calculated in 3 milliseconds with (i=105902, tSkips=24204, lifted=81698, updated=3106, updated/lifted=0.04).
Contains vertex with index 0: false

Parity game: [dining_7.invariantly_inevitably_eat.gm]
Solving: dining_7.invariantly_inevitably_eat.gm(d = 4, n = 8575)
[8193, 8194, 8196, 8201, 8203, 8204, 8206, 8214, 8216, 8227, 8228, 8237, 8239, 8246, 8253, 8261, 8266, 8267, 8269, 8270, ...]
Calculated in 2 milliseconds with (i=103594, tSkips=44380, lifted=59214, updated=27411, updated/lifted=0.46).
Contains vertex with index 0: false

Parity game: [dining_8.plato_infinitely_often_can_eat.gm]
Solving: dining_8.plato_infinitely_often_can_eat.gm(d = 2, n = 15350)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 16 milliseconds with (i=452857, tSkips=47, lifted=452810, updated=81385, updated/lifted=0.18).
Contains vertex with index 0: true

Parity game: [dining_8.invariantly_possibly_eat.gm]
Solving: dining_8.invariantly_possibly_eat.gm(d = 4, n = 28319)
[14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178, ...]
Calculated in 25 milliseconds with (i=805464, tSkips=205799, lifted=599665, updated=109702, updated/lifted=0.18).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_plato_starves.gm]
Solving: dining_8.invariantly_plato_starves.gm(d = 2, n = 20466)
[16384, 16386, 16387, 16389, 16390, 16393, 10, 16395, 16397, 16399, 16400, 16402, 19, 16403, 16405, 16407, 16408, 16410, 27, 16411, ...]
Calculated in 15 milliseconds with (i=403518, tSkips=95741, lifted=307777, updated=10240, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_8.invariantly_inevitably_eat.gm]
Solving: dining_8.invariantly_inevitably_eat.gm(d = 4, n = 28319)
[16385, 16388, 16390, 16391, 16393, 16394, 16395, 16397, 16398, 16400, 16401, 16403, 16406, 16407, 16408, 16409, 16410, 16412, 16415, 16416, ...]
Calculated in 10 milliseconds with (i=403597, tSkips=180256, lifted=223341, updated=98395, updated/lifted=0.44).
Contains vertex with index 0: false

Parity game: [dining_9.plato_infinitely_often_can_eat.gm]
Solving: dining_9.plato_infinitely_often_can_eat.gm(d = 2, n = 50693)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 128 milliseconds with (i=1648409, tSkips=53, lifted=1648356, updated=269876, updated/lifted=0.16).
Contains vertex with index 0: true

Parity game: [dining_9.invariantly_possibly_eat.gm]
Solving: dining_9.invariantly_possibly_eat.gm(d = 4, n = 93529)
[65537, 65536, 65539, 65538, 65541, 65540, 65543, 65542, 65545, 65544, 65547, 65546, 65549, 65548, 65551, 65550, 65553, 65552, 65555, 65554, ...]
Calculated in 239 milliseconds with (i=2941563, tSkips=770398, lifted=2171165, updated=363403, updated/lifted=0.17).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_plato_starves.gm]
Solving: dining_9.invariantly_plato_starves.gm(d = 2, n = 67590)
[65536, 65539, 65538, 65541, 65543, 65545, 65547, 11, 65548, 65551, 65554, 21, 65556, 65558, 65561, 65560, 65563, 65565, 65564, 30, ...]
Calculated in 106 milliseconds with (i=1419266, tSkips=323589, lifted=1095677, updated=33802, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_9.invariantly_inevitably_eat.gm]
Solving: dining_9.invariantly_inevitably_eat.gm(d = 4, n = 93529)
[65537, 65538, 65540, 65549, 65548, 65555, 65556, 65559, 65558, 65563, 65562, 65564, 65566, 65570, 65573, 65572, 65577, 65576, 65579, 65580, ...]
Calculated in 60 milliseconds with (i=1464439, tSkips=642973, lifted=821466, updated=353419, updated/lifted=0.43).
Contains vertex with index 0: false

Parity game: [dining_10.plato_infinitely_often_can_eat.gm]
Solving: dining_10.plato_infinitely_often_can_eat.gm(d = 2, n = 167423)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 444 milliseconds with (i=5947647, tSkips=59, lifted=5947588, updated=893543, updated/lifted=0.15).
Contains vertex with index 0: true

Parity game: [dining_10.invariantly_possibly_eat.gm]
Solving: dining_10.invariantly_possibly_eat.gm(d = 4, n = 308903)
[262148, 262149, 262150, 262151, 262144, 262145, 262146, 262147, 262156, 262157, 262158, 262159, 262152, 262153, 262154, 262155, 262164, 262165, 262166, 262167, ...]
Calculated in 863 milliseconds with (i=10643142, tSkips=2844197, lifted=7798945, updated=1202444, updated/lifted=0.15).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_plato_starves.gm]
Solving: dining_10.invariantly_plato_starves.gm(d = 2, n = 223230)
[12, 23, 33, 42, 50, 57, 63, 68, 72, 75, 77, 87, 96, 105, 113, 120, 126, 131, 135, 138, ...]
Calculated in 435 milliseconds with (i=5288131, tSkips=1249310, lifted=4038821, updated=111622, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_10.invariantly_inevitably_eat.gm]
Solving: dining_10.invariantly_inevitably_eat.gm(d = 4, n = 308903)
[262150, 262151, 262144, 262145, 262147, 262156, 262159, 262152, 262153, 262154, 262164, 262166, 262167, 262160, 262162, 262163, 262172, 262173, 262174, 262175, ...]
Calculated in 238 milliseconds with (i=5525918, tSkips=2462588, lifted=3063330, updated=1268111, updated/lifted=0.41).
Contains vertex with index 0: false

Parity game: [dining_11.plato_infinitely_often_can_eat.gm]
Solving: dining_11.plato_infinitely_often_can_eat.gm(d = 2, n = 552956)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, ...]
Calculated in 670 milliseconds with (i=21303694, tSkips=65, lifted=21303629, updated=2955625, updated/lifted=0.14).
Contains vertex with index 0: true

Parity game: [dining_11.invariantly_possibly_eat.gm]
Solving: dining_11.invariantly_possibly_eat.gm(d = 4, n = 1020235)
[510119, 510118, 510117, 510127, 510126, 510125, 510124, 510123, 510122, 510121, 510120, 510135, 510134, 510133, 510132, 510131, 510130, 510129, 510128, 510143, ...]
Calculated in 1104 milliseconds with (i=38213702, tSkips=10383984, lifted=27829718, updated=3975858, updated/lifted=0.14).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_plato_starves.gm]
Solving: dining_11.invariantly_plato_starves.gm(d = 2, n = 737274)
[524296, 524298, 524299, 524301, 524302, 524303, 524288, 524289, 524291, 524292, 13, 524293, 524294, 524312, 524314, 524315, 524316, 524318, 524319, 25, ...]
Calculated in 587 milliseconds with (i=18379266, tSkips=4195219, lifted=14184047, updated=368644, updated/lifted=0.03).
Contains vertex with index 0: false

Parity game: [dining_11.invariantly_inevitably_eat.gm]
Solving: dining_11.invariantly_inevitably_eat.gm(d = 4, n = 1020235)
[524296, 524297, 524298, 524299, 524300, 524301, 524302, 524303, 524289, 524290, 524292, 524293, 524294, 524295, 524312, 524313, 524316, 524317, 524319, 524305, ...]
Calculated in 416 milliseconds with (i=19717142, tSkips=8586423, lifted=11130719, updated=4540505, updated/lifted=0.41).
Contains vertex with index 0: false

